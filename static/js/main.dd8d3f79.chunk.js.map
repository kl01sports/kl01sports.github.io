{"version":3,"sources":["components/ProductCard.tsx","components/CategoryList.tsx","media/tee.jpg","components/Hero.tsx","components/TopNavBar.tsx","components/Home.tsx","components/ProductList.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["ProductCard","props","bg","useColorModeValue","maxW","w","h","borderWidth","rounded","shadow","position","isNew","size","top","right","src","imageURL","alt","name","roundedTop","objectFit","width","fallback","background","p","mt","justifyContent","alignContent","fontSize","fontWeight","as","lineHeight","isTruncated","d","alignItems","px","colorScheme","CategoryList","useMediaQuery","isNotSmallerScreen","useState","categoryData","setCategoryData","useEffect","fetch","method","then","response","json","data","direction","spacing","pt","pl","pr","alignSelf","align","columns","categories","map","category","_hover","cursor","onClick","window","location","href","id","Hero","backgroundImage","Logo","backgroundSize","backgroundPosition","justify","useBreakpointValue","base","md","bgGradient","color","TopNavbar","useColorMode","colorMode","toggleColorMode","isDark","ml","icon","isRound","open","Home","ProductList","productData","setProductData","useLocation","queryParameters","URLSearchParams","search","get","find","c","getProducts","products","product","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd8d3f79.chunk.js","sourcesContent":["import {\r\n  Badge,\r\n  Box,\r\n  Circle,\r\n  Flex,\r\n  Image,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nexport interface IProductCard {\r\n  isNew?: boolean;\r\n  imageURL: string;\r\n  name: string;\r\n}\r\n\r\nconst ProductCard = (props: IProductCard) => {\r\n  return (\r\n    <Box\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      maxW='sm'\r\n      w='30vw'\r\n      h='30vw'\r\n      borderWidth='1px'\r\n      rounded='lg'\r\n      shadow='lg'\r\n      position='relative'\r\n    >\r\n      {props.isNew && (\r\n        <Circle\r\n          size='10px'\r\n          position='absolute'\r\n          top={2}\r\n          right={2}\r\n          bg='red.200'\r\n        />\r\n      )}\r\n\r\n      <Image\r\n        src={props.imageURL}\r\n        alt={`Picture of ${props.name}`}\r\n        roundedTop='lg'\r\n        objectFit='cover'\r\n        width='30vw'\r\n        h='70%'\r\n        fallback={<Box w='100%' h='70%' background='black'></Box>}\r\n      />\r\n\r\n      <Box p='6' h='30%'>\r\n        <Flex mt='1' justifyContent='space-between' alignContent='center'>\r\n          <Box\r\n            fontSize='2xl'\r\n            fontWeight='semibold'\r\n            as='h4'\r\n            lineHeight='tight'\r\n            isTruncated\r\n          >\r\n            {props.name}\r\n          </Box>\r\n        </Flex>\r\n        <Box d='flex' alignItems='baseline'>\r\n          {props.isNew && (\r\n            <Badge rounded='full' px='2' fontSize='0.8em' colorScheme='red'>\r\n              New\r\n            </Badge>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  SimpleGrid,\r\n  useMediaQuery,\r\n} from '@chakra-ui/react';\r\nimport { useEffect, useState } from 'react';\r\n// import Data from './data.json';\r\nimport { ICategory, IData } from './Interfaces';\r\nimport ProductCard from './ProductCard';\r\n\r\nconst CategoryList = () => {\r\n  const [isNotSmallerScreen] = useMediaQuery('(min-width:600px)');\r\n  const [categoryData, setCategoryData] = useState<IData>();\r\n\r\n  const getProducts = () => {\r\n    fetch('https://raw.githubusercontent.com/kl01sports/data/main/data.json', {\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCategoryData(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    // setCategoryData(Data);\r\n  }, []);\r\n\r\n  return (\r\n    <Box width='100%' p={0}>\r\n      <Flex\r\n        direction={isNotSmallerScreen ? 'row' : 'column'}\r\n        spacing='200px'\r\n        pt={isNotSmallerScreen ? '12' : '0'}\r\n        pl={isNotSmallerScreen ? '12' : '0'}\r\n        pr={isNotSmallerScreen ? '12' : '0'}\r\n        // pb={isNotSmallerScreen ? '12' : '0'}\r\n        alignSelf='flex-start'\r\n      >\r\n        <Box mt={isNotSmallerScreen ? '0' : 16} align='flex-start'>\r\n          <Heading>Featured Categories </Heading>\r\n        </Box>\r\n      </Flex>\r\n      <SimpleGrid\r\n        columns={3}\r\n        // minChildWidth='28vw'\r\n        spacing={10}\r\n        p={isNotSmallerScreen ? '12' : '0'}\r\n      >\r\n        {categoryData?.categories.map((category: ICategory) => {\r\n          return (\r\n            <Box\r\n              _hover={{\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={() =>\r\n                (window.location.href = '#/products?category=' + category.id)\r\n              }\r\n            >\r\n              <ProductCard\r\n                name={category.name}\r\n                imageURL={category.imageURL}\r\n              ></ProductCard>\r\n            </Box>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","export default __webpack_public_path__ + \"static/media/tee.6a1151c1.jpg\";","import {\r\n  Button,\r\n  Flex,\r\n  Stack,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport Logo from '../media/tee.jpg';\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <Flex\r\n      w={'full'}\r\n      h={'40vh'}\r\n      backgroundImage={\r\n        // 'url(https://images.unsplash.com/photo-1600267175161-cfaa711b4a81?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80)'\r\n        // 'url(https://drive.google.com/file/d/143X6gpWMnBoK_W1uXbTbI6QEgyD6LMoU/view?usp=sharing)'\r\n        Logo\r\n      }\r\n      backgroundSize={'cover'}\r\n      backgroundPosition={'center center'}\r\n    >\r\n      <VStack\r\n        w={'full'}\r\n        justify={'center'}\r\n        align={'start'}\r\n        px={useBreakpointValue({ base: 4, md: 8 })}\r\n        bgGradient={'linear(to-r, blackAlpha.600, transparent)'}\r\n      >\r\n        <Stack maxW={'2xl'} align={'flex-start'} spacing={6}>\r\n          <Text\r\n            color={'white'}\r\n            fontWeight={700}\r\n            lineHeight={1.2}\r\n            fontSize={useBreakpointValue({ base: '3xl', md: '4xl' })}\r\n          >\r\n            Lorem ipsum dolor sit amet consectetur adipiscing elit sed do\r\n            eiusmod tempor\r\n          </Text>\r\n          <Stack direction={'row'}>\r\n            <Button\r\n              bg={'blue.400'}\r\n              rounded={'full'}\r\n              color={'white'}\r\n              _hover={{ bg: 'blue.500' }}\r\n            >\r\n              Show me more\r\n            </Button>\r\n            <Button\r\n              bg={'whiteAlpha.300'}\r\n              rounded={'full'}\r\n              color={'white'}\r\n              _hover={{ bg: 'whiteAlpha.500' }}\r\n            >\r\n              Show me more\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </VStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import {\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { FaInstagram, FaMoon, FaSun, FaWhatsapp } from 'react-icons/fa';\r\n\r\nconst TopNavbar = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const isDark = colorMode === 'dark';\r\n\r\n  return (\r\n    <Flex w='100%' p={5}>\r\n      <Heading\r\n        ml='8'\r\n        size='md'\r\n        fontWeight='bold'\r\n        color='cyan.400'\r\n        alignSelf={'center'}\r\n        onClick={() => (window.location.href = '/')}\r\n        _hover={{\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        KL 01 SPORTS\r\n      </Heading>\r\n      <Spacer />\r\n\r\n      <IconButton\r\n        aria-label=''\r\n        ml={2}\r\n        icon={<FaInstagram />}\r\n        isRound={true}\r\n        onClick={() => window.open('https://www.instagram.com/abhiram_hari_/')}\r\n      ></IconButton>\r\n      <IconButton\r\n        aria-label=''\r\n        ml={2}\r\n        icon={<FaWhatsapp />}\r\n        isRound={true}\r\n        onClick={() =>\r\n          window.open('https://api.whatsapp.com/send?phone=918301049118')\r\n        }\r\n      ></IconButton>\r\n\r\n      <IconButton\r\n        aria-label=''\r\n        ml={8}\r\n        icon={isDark ? <FaSun /> : <FaMoon />}\r\n        isRound={true}\r\n        onClick={toggleColorMode}\r\n      ></IconButton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default TopNavbar;\r\n","import { VStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport CategoryList from './CategoryList';\r\nimport Hero from './Hero';\r\nimport TopNavbar from './TopNavBar';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <VStack pt={0}>\r\n      <TopNavbar></TopNavbar>\r\n      <Hero></Hero>\r\n      <CategoryList></CategoryList>\r\n      {/* <Testimonial></Testimonial> */}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  SimpleGrid,\r\n  useMediaQuery,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ICategory, IProduct } from './Interfaces';\r\n// import Data from './data.json';\r\nimport ProductCard from './ProductCard';\r\nimport TopNavbar from './TopNavBar';\r\n\r\nconst ProductList = () => {\r\n  const [isNotSmallerScreen] = useMediaQuery('(min-width:600px)');\r\n  const [productData, setProductData] = useState<ICategory>();\r\n\r\n  const getProducts = (category: string) => {\r\n    fetch('https://raw.githubusercontent.com/kl01sports/data/main/data.json', {\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const categoryData = data.categories.find(\r\n          (c: ICategory) => c.id === category\r\n        );\r\n        setProductData(categoryData);\r\n      });\r\n\r\n    //Testing purposes\r\n    // const categoryData = Data.categories.find(\r\n    //   (c: ICategory) => c.id === category\r\n    // );\r\n    // setProductData(categoryData);\r\n  };\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const queryParameters = new URLSearchParams(location.search);\r\n    if (queryParameters && queryParameters.get('category')) {\r\n      const category = queryParameters.get('category');\r\n      if (category) getProducts(category);\r\n    }\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <VStack pt={0}>\r\n      <TopNavbar></TopNavbar>\r\n      {/* <Hero></Hero> */}\r\n      <Box width='100%' p={0}>\r\n        <Flex\r\n          direction={isNotSmallerScreen ? 'row' : 'column'}\r\n          spacing='200px'\r\n          pt={isNotSmallerScreen ? '12' : '0'}\r\n          pl={isNotSmallerScreen ? '12' : '0'}\r\n          pr={isNotSmallerScreen ? '12' : '0'}\r\n          // pb={isNotSmallerScreen ? '12' : '0'}\r\n          alignSelf='flex-start'\r\n        >\r\n          <Box mt={isNotSmallerScreen ? '0' : 16} align='flex-start'>\r\n            <Heading>{productData?.name} </Heading>\r\n          </Box>\r\n        </Flex>\r\n        <SimpleGrid\r\n          columns={3}\r\n          // minChildWidth='28vw'\r\n          spacing={10}\r\n          p={isNotSmallerScreen ? '12' : '0'}\r\n        >\r\n          {productData?.products?.map((product: IProduct) => {\r\n            return (\r\n              <ProductCard\r\n                name={product.name}\r\n                imageURL={product.imageURL}\r\n                isNew={product.isNew}\r\n              ></ProductCard>\r\n            );\r\n          })}\r\n        </SimpleGrid>\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport ProductList from './components/ProductList';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={`/${process.env.PUBLIC_URL}`}>\r\n      {/*All our Routes goes here!*/}\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/products' component={ProductList} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// theme.ts\r\n\r\n// 1. import `extendTheme` function\r\nimport { extendTheme, ThemeConfig } from '@chakra-ui/react';\r\n\r\n// 2. Add your color mode config\r\nconst config: ThemeConfig = {\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false,\r\n};\r\n\r\n// 3. extend the theme\r\nconst theme = extendTheme({ config });\r\n\r\nexport default theme;\r\n","import { ChakraProvider } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider theme={theme}>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}